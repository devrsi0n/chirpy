mutation createOneComment($pageId: String!, $content: Json!, $userId: String!) {
  createOneComment(
    data: {
      content: $content
      page: { connect: { id: $pageId } }
      user: { connect: { id: $userId } }
    }
  ) {
    id
    pageId
    content
    parentId
    createdAt
    user {
      id
      name
      avatar
    }
    likes {
      id
      user {
        id
        name
        avatar
      }
    }
  }
}

mutation createOneReply($id: String!, $content: Json!, $userId: String!, $pageId: String!) {
  updateOneComment(
    where: { id: $id }
    data: {
      replies: {
        create: {
          content: $content
          parent: { connect: { id: $id } }
          user: { connect: { id: $userId } }
          page: { connect: { id: $pageId } }
        }
      }
    }
  ) {
    id
    pageId
    content
    createdAt
    likes {
      id
      user {
        id
        name
        avatar
      }
    }
    user {
      id
      name
      avatar
    }
    replies {
      id
      pageId
      content
      createdAt
      user {
        id
        name
        avatar
      }
      likes {
        id
        user {
          id
          name
          avatar
        }
      }

      replies {
        id
        pageId
        content
        createdAt
        user {
          id
          name
          avatar
        }
        likes {
          id
          user {
            id
            name
            avatar
          }
        }
      }
    }
  }
}

query commentsByPage($pageId: String!) {
  comments(where: { pageId: { equals: $pageId }, parentId: { equals: null } }) {
    id
    pageId
    content
    parentId
    createdAt
    user {
      id
      name
      avatar
    }
    likes {
      id
      user {
        id
        name
        avatar
      }
    }
    replies {
      id
      pageId
      parentId
      content
      createdAt
      user {
        id
        name
        avatar
      }
      likes {
        id
        user {
          id
          name
          avatar
        }
      }

      replies {
        id
        pageId
        parentId
        content
        createdAt
        user {
          id
          name
          avatar
        }
        likes {
          id
          user {
            id
            name
            avatar
          }
        }
      }
    }
  }
}

# Query ancestors up to 2 levels
query commentDetails($commentId: String) {
  comment(where: { id: $commentId }) {
    id
    content
    createdAt
    user {
      id
      name
      avatar
    }
    likes {
      id
      user {
        id
        name
        avatar
      }
    }
    replies {
      id
      content
      createdAt
      user {
        id
        name
        avatar
      }
      likes {
        id
        user {
          id
          name
          avatar
        }
      }
    }
    parent {
      id
      content
      createdAt
      user {
        id
        name
        avatar
      }
      likes {
        id
        user {
          id
          name
          avatar
        }
      }
      parent {
        id
        content
        createdAt
        user {
          id
          name
          avatar
        }
        likes {
          id
          user {
            id
            name
            avatar
          }
        }
      }
    }
  }
}
