// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["atomicNumberOperations", "connectOrCreate", "transactionApi"]
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../server/type-graphql"
}

model User {
  id           String    @id @default(cuid())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  name         String
  email        String    @unique
  googleUserId String?   @unique
  githubUserId String?   @unique
  avatar       String?
  members      Member[]
  // A `PRO` user can create multiple teamsï¼Œbut a `FREE` user can't
  type         UserType  @default(FREE)
  // A free user can create 3 projects at most
  projects     Project[]
}

model Member {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  team      Team     @relation(fields: [teamId], references: [id])
  teamId    String
  role      Role     @default(USER)
}

model Team {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String
  members   Member[]
  project   Project[]
}

// A project is associated with a `FREE` user or a Team(create by `PRO` user)
model Project {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  team      Team?     @relation(fields: [teamId], references: [id])
  teamId    String?
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

enum Role {
  USER
  ADMIN
}

enum UserType {
  FREE
  PRO
}
