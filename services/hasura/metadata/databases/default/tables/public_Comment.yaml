table:
  schema: public
  name: Comment
configuration:
  custom_root_fields:
    insert: insertComments
    select_aggregate: commentAggregate
    insert_one: insertOneComment
    select_by_pk: commentByPk
    select: comments
    delete: deleteComments
    update: updateComments
    delete_by_pk: deleteCommentByPk
    update_by_pk: updateCommentByPk
  column_config: {}
  custom_column_names: {}
object_relationships:
  - name: page
    using:
      foreign_key_constraint_on: pageId
  - name: parent
    using:
      foreign_key_constraint_on: parentId
  - name: user
    using:
      foreign_key_constraint_on: userId
array_relationships:
  - name: likes
    using:
      foreign_key_constraint_on:
        column: commentId
        table:
          schema: public
          name: Like
  - name: replies
    using:
      foreign_key_constraint_on:
        column: parentId
        table:
          schema: public
          name: Comment
insert_permissions:
  - role: user
    permission:
      check:
        userId:
          _eq: X-Hasura-User-Id
      set:
        userId: x-hasura-User-Id
      columns:
        - content
        - pageId
        - parentId
      backend_only: false
select_permissions:
  - role: user
    permission:
      columns:
        - content
        - createdAt
        - deletedAt
        - id
        - pageId
        - parentId
        - userId
      filter: {}
update_permissions:
  - role: user
    permission:
      columns:
        - deletedAt
      filter:
        page:
          project:
            userId:
              _eq: X-Hasura-User-Id
      check: null
event_triggers:
  - name: Comment
    definition:
      enable_manual: false
      insert:
        columns: '*'
      update:
        columns: '*'
    retry_conf:
      num_retries: 3
      interval_sec: 10
      timeout_sec: 60
    webhook_from_env: HASURA_GRAPHQL_EVENT_URL
    headers:
      - name: HASURA_EVENT_SECRET
        value_from_env: HASURA_EVENT_SECRET
