{"version":3,"sources":["comment.ts"],"names":[],"mappings":";;;;;;;AACA;;;;AAKA;AACA;AACA;AACM,SAAU,OAAV,GAAiB;AACrB;AACA;AACA,MAAM,MAAM,GAA6B,MAAM,CAAC,QAAP,CAAgB,aAAhB,kCAAzC;;AAGA,MAAI,CAAC,MAAL,EAAa;AACX,IAAA,OAAO,CAAC,KAAR;AACA;AACD;;AACD,MAAM,GAAG,GAAG,MAAM,CAAC,OAAP,0BAAZ;;AACA,MAAI,CAAC,GAAL,EAAU;AACR,IAAA,KAAK,qCAAL;AACA;AACD;;AACD,MAAM,YAAY,GAAuB,MAAM,CAAC,QAAP,CAAgB,aAAhB,sCAAzC;;AAGA,MAAI,CAAC,YAAL,EAAmB;AACjB,IAAA,KAAK,gCAAL;AACA;AACD;;AACD,EAAA,KAAK,kFACqE,GADrE,kBACgF,MAAM,CAAC,QAAP,CAAgB,MADhG,oBACgH,MAAM,CAAC,QAAP,CAAgB,KADhI,EAAL,CAGG,IAHH,CAGQ,UAAC,GAAD;AAAA,WAAS,GAAG,CAAC,IAAJ,EAAT;AAAA,GAHR,EAIG,IAJH,CAIQ,UAAC,IAAD,EAAsB;AAC1B,QAAI,CAAC,IAAL,EAAW;AACT,MAAA,OAAO,CAAC,KAAR,CAAc,+BAAd;AACA;AACD;;AACD,QAAM,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC,EAAN,CAAtB;;AACA,QAAI,MAAM,CAAC,QAAP,CAAgB,cAAhB,CAA+B,EAA/B,CAAJ,EAAwC;AACtC;AACD;;AACD,QAAM,SAAS,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAlB;AACA,IAAA,SAAS,CAAC,GAAV,yDAA6D,GAA7D,cAAoE,IAAI,CAAC,EAAzE;AACA,IAAA,SAAS,CAAC,EAAV,GAAe,EAAf;AACA,IAAA,SAAS,CAAC,KAAV,CAAgB,KAAhB,GAAwB,MAAxB;AACA,IAAA,SAAS,CAAC,WAAV,GAAwB,GAAxB;AACA,IAAA,YAAY,CAAC,WAAb,CAAyB,SAAzB;AACD,GAnBH;AAoBD;;AAED,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,EAAD;AAAA,uCAAuD,EAAvD;AAAA,CAApB;;AAEA,IAAI,OAAO,MAAP,KAAkB,WAAtB,EAAmC;AACjC,EAAA,OAAO;AACN,EAAA,MAAsC,QAAtC,GAA2E;AAC1E,IAAA,OAAO,EAAP;AAD0E,GAA3E;AAGF","file":"comment.js","sourceRoot":"../src/lib","sourcesContent":["import type { Page } from '@prisma/client';\n/*\n * Widget entry for customers, this file should be minimal since this file is a external entry,\n * it built by parcel.\n */\n\n// User init a page by import a script\n// <script defer src=\"/widget/comment.js\" data-${NEXT_PUBLIC_APP_NAME}-pid=\"xxxx\"><script>\n// Render target: <div data-${NEXT_PUBLIC_APP_NAME}=\"true\"></div>\nexport function comment(): void {\n  // Get page url and init this page with a correct iframe\n  // <iframe src=\"/widget/comment/xxxxx/xxxxxx\"><iframe>\n  const script: HTMLScriptElement | null = window.document.querySelector(\n    `[data-${process.env.NEXT_PUBLIC_APP_NAME}-pid]`,\n  );\n  if (!script) {\n    console.error(`Can't find the comment script`);\n    return;\n  }\n  const pid = script.dataset[`${process.env.NEXT_PUBLIC_APP_NAME}Pid`];\n  if (!pid) {\n    alert(`Please add the pid in your script`);\n    return;\n  }\n  const renderTarget: HTMLElement | null = window.document.querySelector(\n    `[data-${process.env.NEXT_PUBLIC_APP_NAME}-comment]`,\n  );\n  if (!renderTarget) {\n    alert(`Can't find the render target`);\n    return;\n  }\n  fetch(\n    `${process.env.NEXT_PUBLIC_APP_URL}/api/get-page-by-project?projectId=${pid}&url=${window.location.origin}&title=${window.document.title}`,\n  )\n    .then((res) => res.json())\n    .then((page: Page | null) => {\n      if (!page) {\n        console.error('Unexpected null from response');\n        return;\n      }\n      const id = getIframeId(page.id);\n      if (window.document.getElementById(id)) {\n        return;\n      }\n      const container = document.createElement('iframe');\n      container.src = `${process.env.NEXT_PUBLIC_APP_URL}/widget/${pid}/${page.id}`;\n      container.id = id;\n      container.style.width = '100%';\n      container.frameBorder = '0';\n      renderTarget.appendChild(container);\n    });\n}\n\nconst getIframeId = (id: string) => `${process.env.NEXT_PUBLIC_APP_NAME}-${id}`;\n\nif (typeof window !== 'undefined') {\n  comment();\n  (window as { [key: string]: $TsFixMe })[process.env.NEXT_PUBLIC_APP_NAME] = {\n    comment,\n  };\n}\n"]}