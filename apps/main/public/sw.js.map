{"version":3,"file":"sw.js","sources":["../src/external/sw/utilities.ts","../src/external/sw/index.ts"],"sourcesContent":["/// <reference no-default-lib=\"true\"/>\n/// <reference lib=\"esnext\" />\n/// <reference lib=\"WebWorker\" />\n\nconst sw = self as unknown as ServiceWorkerGlobalScope & typeof globalThis;\n\n/**\n * Focus on the existing tab or open a new one.\n * @param url\n */\nexport function openOrFocusWindow(url: string): Promise<void | WindowClient | null> {\n  const urlToOpen = new URL(url, sw.location.origin).href;\n\n  return sw.clients\n    .matchAll({\n      type: 'window',\n      includeUncontrolled: true,\n    })\n    .then((windowClients) => {\n      let matchingClient = null;\n\n      for (const windowClient of windowClients) {\n        if (windowClient.url === urlToOpen) {\n          matchingClient = windowClient;\n          break;\n        }\n      }\n\n      return matchingClient ? matchingClient.focus() : sw.clients.openWindow(urlToOpen);\n    });\n}\n","/// <reference no-default-lib=\"true\"/>\n/// <reference lib=\"esnext\" />\n/// <reference lib=\"WebWorker\" />\nimport type { WebNotificationPayload } from '$/server/services/notification/push-web-notification';\n\nimport { openOrFocusWindow } from './utilities';\n\nconst sw = self as unknown as ServiceWorkerGlobalScope & typeof globalThis;\n\nsw.addEventListener('push', (event: PushEvent) => {\n  if (sw.Notification?.permission !== 'granted' || !event.data) {\n    return;\n  }\n  const message: WebNotificationPayload = event.data.json();\n  // console.log('Push message received:', message);\n  event.waitUntil(\n    sw.registration.showNotification(message.title, {\n      requireInteraction: true,\n      icon: '/favicon.png',\n      data: message,\n      body: `\"${message.body}\"`,\n      tag: message.url,\n    }),\n  );\n});\n\nsw.addEventListener('notificationclick', (event: NotificationEvent) => {\n  const clickedNotification = event.notification;\n  const data: WebNotificationPayload = event.notification.data;\n  clickedNotification.close();\n\n  const promiseChain = openOrFocusWindow(data.url);\n  event.waitUntil(promiseChain);\n});\n\n// https://redfin.engineering/how-to-fix-the-refresh-button-when-using-service-workers-a8e27af6df68\nconst CACHE_ID = process.env.SW_CACHE_ID;\nsw.addEventListener('install', (e) => {\n  // Make sure complete success or total failure, with nothing between\n  e.waitUntil(caches.open(CACHE_ID).then((cache) => cache.addAll(['/'])));\n});\n\n// Fix browser refresh button doesn't refresh the service worker\nsw.addEventListener('fetch', (e) => {\n  // console.log('fetch', e.request);\n  e.respondWith(\n    (async () => {\n      if (\n        e.request.mode === 'navigate' &&\n        e.request.method === 'GET' &&\n        sw.registration.waiting &&\n        // eslint-disable-next-line unicorn/no-await-expression-member\n        (await sw.clients.matchAll()).length < 2\n      ) {\n        sw.registration.waiting.postMessage('skipWaiting');\n        return new Response('', { headers: { Refresh: '0' } });\n      }\n      return (await caches.match(e.request)) || fetch(e.request);\n    })(),\n  );\n});\n\nsw.addEventListener('activate', (e) => {\n  e.waitUntil(\n    caches.keys().then((keys) => {\n      return Promise.all(\n        keys.map((key) => {\n          if (key != CACHE_ID) return caches.delete(key);\n        }),\n      );\n    }),\n  );\n});\n\nsw.addEventListener('message', (e) => {\n  if (e.data === 'skipWaiting') {\n    sw.skipWaiting();\n  }\n});\n"],"names":["sw"],"mappings":";;;;AAIA,QAAMA,OAAK;AAMJ,6BAA2B,KAAkD;AAClF,UAAM,YAAY,IAAI,IAAI,KAAKA,KAAG,SAAS,MAAM,EAAE;AAE5C,WAAAA,KAAG,QACP,SAAS;AAAA,MACR,MAAM;AAAA,MACN,qBAAqB;AAAA,IAAA,CACtB,EACA,KAAK,CAAC,kBAAkB;AACvB,UAAI,iBAAiB;AAErB,iBAAW,gBAAgB,eAAe;AACpC,YAAA,aAAa,QAAQ,WAAW;AACjB,2BAAA;AACjB;AAAA,QACF;AAAA,MACF;AAEA,aAAO,iBAAiB,eAAe,UAAUA,KAAG,QAAQ,WAAW,SAAS;AAAA,IAAA,CACjF;AAAA,EACL;ACvBA,QAAM,KAAK;AAEX,KAAG,iBAAiB,QAAQ,CAAC,UAAqB;;AAChD,QAAI,UAAG,iBAAH,mBAAiB,gBAAe,aAAa,CAAC,MAAM,MAAM;AAC5D;AAAA,IACF;AACM,UAAA,UAAkC,MAAM,KAAK,KAAK;AAExD,UAAM,UACJ,GAAG,aAAa,iBAAiB,QAAQ,OAAO;AAAA,MAC9C,oBAAoB;AAAA,MACpB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM,IAAI,QAAQ;AAAA,MAClB,KAAK,QAAQ;AAAA,IACd,CAAA,CACH;AAAA,EACF,CAAC;AAED,KAAG,iBAAiB,qBAAqB,CAAC,UAA6B;AACrE,UAAM,sBAAsB,MAAM;AAC5B,UAAA,OAA+B,MAAM,aAAa;AACxD,wBAAoB,MAAM;AAEpB,UAAA,eAAe,kBAAkB,KAAK,GAAG;AAC/C,UAAM,UAAU,YAAY;AAAA,EAC9B,CAAC;AAGD,QAAM,WAAW;AACjB,KAAG,iBAAiB,WAAW,CAAC,MAAM;AAEpC,MAAE,UAAU,OAAO,KAAK,QAAQ,EAAE,KAAK,CAAC,UAAU,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAAA,EACxE,CAAC;AAGD,KAAG,iBAAiB,SAAS,CAAC,MAAM;AAElC,MAAE,YACa,aAAA;AACX,UACE,EAAE,QAAQ,SAAS,cACnB,EAAE,QAAQ,WAAW,SACrB,GAAG,aAAa,WAET,OAAA,GAAG,QAAQ,SAAS,GAAG,SAAS,GACvC;AACG,WAAA,aAAa,QAAQ,YAAY,aAAa;AAC1C,eAAA,IAAI,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,IAAI,EAAA,CAAG;AAAA,MACvD;AACQ,aAAA,MAAM,OAAO,MAAM,EAAE,OAAO,KAAM,MAAM,EAAE,OAAO;AAAA,QAE7D;AAAA,EACF,CAAC;AAED,KAAG,iBAAiB,YAAY,CAAC,MAAM;AACrC,MAAE,UACA,OAAO,KAAA,EAAO,KAAK,CAAC,SAAS;AAC3B,aAAO,QAAQ,IACb,KAAK,IAAI,CAAC,QAAQ;AAChB,YAAI,OAAO;AAAiB,iBAAA,OAAO,OAAO,GAAG;AAAA,MAC9C,CAAA,CACH;AAAA,IACD,CAAA,CACH;AAAA,EACF,CAAC;AAED,KAAG,iBAAiB,WAAW,CAAC,MAAM;AAChC,QAAA,EAAE,SAAS,eAAe;AAC5B,SAAG,YAAY;AAAA,IACjB;AAAA,EACF,CAAC;;"}