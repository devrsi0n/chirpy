{"version":3,"file":"comment.js","sources":["../../src/lib/constants.ts","../../src/server/common/error-code.ts","../../src/external/bootstrapper/comment/comment-bootstrapper.ts","../../src/external/bootstrapper/comment/comment.ts"],"sourcesContent":["export const LOG_IN_SUCCESS_KEY = 'login.success';\nexport const CALLBACK_URL_KEY = 'callback.url';\n\n// 7 days\nexport const SESSION_MAX_AGE = 7 * 24 * 60 * 60;\nexport const HASURA_TOKEN_MAX_AGE = 60 * 60;\n\nexport const APP_URL = process.env.NEXT_PUBLIC_APP_URL;\n\nexport const EVENT_CLICK_CONTAINER = 'EVENT_CLICK_CONTAINER';\n\nexport const WIDGET_COMMENT_PATH = '/widget/comment/';\n\nexport const ANALYTICS_DOMAIN = 'chirpy.dev';\n\nexport const FEEDBACK_LINK = 'https://github.com/devrsi0n/chirpy/issues/new/choose';\n","export const ERR_UNMATCHED_DOMAIN = 'ERR_UNMATCHED_DOMAIN';\n","import { EVENT_CLICK_CONTAINER } from '../../../lib/constants';\nimport { ERR_UNMATCHED_DOMAIN } from '../../../server/common/error-code';\nimport { ResponseError } from '../../../server/types/error';\nimport { GetPagByUrl } from '../../../server/types/page';\n\n/*\n * Widget entry for customers, this file should be minimal since this file is a external entry.\n */\n\nconst scriptQuery = `[data-chirpy-domain]`;\nconst targetQuery = `[data-chirpy-comment=\"true\"]`;\n\n// User init a page by import a script\n// <script defer src=\"/widget/comment.js\" data-chirpy-domain=\"yourdomain.com\"><script>\n// Render target: <div data-chirpy-comment=\"true\"></div>\nexport async function comment(): Promise<void> {\n  // Get page url and init this page with a correct iframe\n  // <iframe src=\"/widget/comment/xxxxx/xxxxxx\"><iframe>\n  const script: HTMLScriptElement | null = window.document.querySelector(scriptQuery);\n  if (!script) {\n    throw new Error(\n      `Can't find the chirpy domain, did you forget to add ${scriptQuery} to your script?`,\n    );\n  }\n  const domain = script.dataset['chirpyDomain'];\n  if (!domain) {\n    throw new Error(`No domain specified`);\n  }\n\n  const renderTarget: HTMLElement | null = window.document.querySelector(targetQuery);\n  if (!renderTarget) {\n    throw new Error(`Can't find the render target, did you forget to add ${targetQuery}?`);\n  }\n  const { origin, pathname } = window.location;\n  const res = await fetch(\n    `${process.env.NEXT_PUBLIC_APP_URL}/api/page?domain=${domain}&url=${encodeURIComponent(\n      origin + pathname,\n    )}&title=${encodeURIComponent(window.document.title)}`,\n  );\n  const page: GetPagByUrl = await res.json();\n  if (isResponseError(page)) {\n    if (page.code == ERR_UNMATCHED_DOMAIN) {\n      return console.error(page.error);\n    }\n    throw new Error(page.error);\n  }\n  if (!page) {\n    console.error('Unexpected null from response');\n    return;\n  }\n  const id = getIframeId(page.id);\n  if (window.document.querySelector(`#${id}`)) {\n    return;\n  }\n  const container = document.createElement('iframe');\n  container.id = id;\n  container.style.width = '100%';\n  container.frameBorder = '0';\n  container.scrolling = 'no';\n  let previousHeight = 0;\n  window.addEventListener(\n    'message',\n    (event) => {\n      if (\n        event.origin === process.env.NEXT_PUBLIC_APP_URL &&\n        event.data?.height &&\n        event.data?.height !== previousHeight\n      ) {\n        container.style.height = event.data.height + 'px';\n        previousHeight = event.data.height;\n      }\n    },\n    false,\n  );\n  window.document.body.addEventListener('click', () => {\n    container.contentWindow?.postMessage(EVENT_CLICK_CONTAINER);\n  });\n  container.src = `${process.env.NEXT_PUBLIC_APP_URL}/widget/comment/${encodeURIComponent(\n    page.url,\n  )}`;\n  renderTarget.append(container);\n}\n\nfunction isResponseError(res: GetPagByUrl): res is ResponseError {\n  return !!(res as ResponseError).error;\n}\n\nconst getIframeId = (id: string) => `chirpy-${id}`;\n","import { comment } from './comment-bootstrapper';\n\nconst win = window as any;\nif (win && !win.disableAutoInjection) {\n  comment();\n  win.Chirpy = {\n    comment,\n  };\n}\n"],"names":[],"mappings":";;;;AASO,QAAM,wBAAwB;ACT9B,QAAM,uBAAuB;ACSpC,QAAM,cAAc;AACpB,QAAM,cAAc;AAK2B,2BAAA;AAG7C,UAAM,SAAmC,OAAO,SAAS,cAAc,WAAW;AAClF,QAAI,CAAC,QAAQ;AACL,YAAA,IAAI,MACR,uDAAuD,6BACzD;AAAA,IACF;AACM,UAAA,SAAS,OAAO,QAAQ;AAC9B,QAAI,CAAC,QAAQ;AACL,YAAA,IAAI,MAAM,qBAAqB;AAAA,IACvC;AAEA,UAAM,eAAmC,OAAO,SAAS,cAAc,WAAW;AAClF,QAAI,CAAC,cAAc;AACX,YAAA,IAAI,MAAM,uDAAuD,cAAc;AAAA,IACvF;AACM,UAAA,EAAE,QAAQ,aAAa,OAAO;AACpC,UAAM,MAAM,MAAM,MAChB,GAAG,2CAAmD,cAAc,mBAClE,SAAS,QACX,WAAW,mBAAmB,OAAO,SAAS,KAAK,GACrD;AACM,UAAA,OAAoB,MAAM,IAAI;AAChC,QAAA,gBAAgB,IAAI,GAAG;AACrB,UAAA,KAAK,QAAQ,sBAAsB;AAC9B,eAAA,QAAQ,MAAM,KAAK,KAAK;AAAA,MACjC;AACM,YAAA,IAAI,MAAM,KAAK,KAAK;AAAA,IAC5B;AACA,QAAI,CAAC,MAAM;AACT,cAAQ,MAAM,+BAA+B;AAC7C;AAAA,IACF;AACM,UAAA,KAAK,YAAY,KAAK,EAAE;AAC9B,QAAI,OAAO,SAAS,cAAc,IAAI,IAAI,GAAG;AAC3C;AAAA,IACF;AACM,UAAA,YAAY,SAAS,cAAc,QAAQ;AACjD,cAAU,KAAK;AACf,cAAU,MAAM,QAAQ;AACxB,cAAU,cAAc;AACxB,cAAU,YAAY;AACtB,QAAI,iBAAiB;AACd,WAAA,iBACL,WACA,CAAC,UAAU;;AAEP,UAAA,MAAM,WAAW,2BACjB,aAAM,SAAN,mBAAY,WACZ,aAAM,SAAN,mBAAY,YAAW,gBACvB;AACA,kBAAU,MAAM,SAAS,MAAM,KAAK,SAAS;AAC7C,yBAAiB,MAAM,KAAK;AAAA,MAC9B;AAAA,OAEF,KACF;AACA,WAAO,SAAS,KAAK,iBAAiB,SAAS,MAAM;;AACzC,sBAAA,kBAAA,mBAAe,YAAY;AAAA,IAAqB,CAC3D;AACD,cAAU,MAAM,GAAG,0CAAkD,mBACnE,KAAK,GACP;AACA,iBAAa,OAAO,SAAS;AAAA,EAC/B;AAEA,2BAAyB,KAAwC;AACxD,WAAA,CAAC,CAAE,IAAsB;AAAA,EAClC;AAEA,QAAM,cAAc,CAAC,OAAe,UAAU;ACrF9C,QAAM,MAAM;AACZ,MAAI,OAAO,CAAC,IAAI,sBAAsB;AAC5B;AACR,QAAI,SAAS;AAAA,MACX;AAAA,IAAA;AAAA,EAEJ;;"}